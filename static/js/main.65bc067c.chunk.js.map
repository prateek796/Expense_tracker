{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onFilterChange","target","ExpemseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","Expenseslist","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaxValue","max","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","useState","FilteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpensesChart","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"kaAQeA,MANf,SAAcC,GACV,IAAMC,EAAQ,QAAUD,EAAME,UAC9B,OAAO,qBAAKA,UAAWD,EAAhB,SAA0BD,EAAMG,YCqB5BC,G,MApBQ,SAACJ,GAKtB,OACE,qBAAKE,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQG,MAAOL,EAAMM,SAAUC,SARP,SAACC,GAC7BR,EAAMS,eAAeD,EAAME,OAAOL,QAO9B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4B,kBCAKM,MAhBf,SAAqBX,GACjB,IAAMY,EAAQZ,EAAMa,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDC,EAAOb,EAAMa,KAAKC,eAAe,QAAS,CAAEC,IAAK,YACjDC,EAAOhB,EAAMa,KAAKI,cAExB,OACI,sBAAKf,UAAU,eAAf,UACA,qBAAKA,UAAU,sBAAf,SAAsCU,IACtC,qBAAMV,UAAU,qBAAhB,SAAsCc,IACtC,qBAAMd,UAAU,oBAAhB,SAAqCW,QCO9BK,EAdK,SAAClB,GAEjB,OAAQ,6BACJ,eAAC,EAAD,CAAME,UAAU,eAAhB,UACI,cAAC,EAAD,CAAaW,KAAMb,EAAMa,OACzB,sBAAKX,UAAU,4BAAf,UACI,6BAAKF,EAAMmB,QACX,sBAAKjB,UAAU,sBAAf,gBAAyCF,EAAMoB,mBCK5CC,EAbE,SAACrB,GAClB,OAA2B,IAAvBA,EAAMsB,MAAMC,OACL,oBAAIrB,UAAU,yBAAd,iCAEJ,oBAAIA,UAAU,eAAd,SACFF,EAAMsB,MAAME,KAAI,SAAAC,GAAO,OACpB,cAAC,EAAD,CAEIN,MAAOM,EAAQN,MACfC,OAAQK,EAAQL,OAChBP,KAAMY,EAAQZ,MAHTY,EAAQC,U,OCSdC,G,MAhBE,SAAA3B,GACb,IAAI4B,EAAgB,KAMpB,OAJG5B,EAAM6B,SAAW,IAChBD,EAAgBE,KAAKC,MAAQ/B,EAAMK,MAAQL,EAAM6B,SAAa,KAAO,KAGjE,sBAAK3B,UAAU,YAAf,UACJ,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,kBAAkB8B,MAAO,CAAEC,OAASL,OAEvD,qBAAK1B,UAAU,mBAAf,SAAmCF,EAAMkC,aCOlCC,G,MAjBD,SAACnC,GACX,IAAMoC,EAAkBpC,EAAMqC,WAAWb,KAAI,SAAAc,GAAS,OAAIA,EAAUjC,SAC9DkC,EAAgBT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IACnC,OAAO,qBAAKlC,UAAU,QAAf,SACFF,EAAMqC,WAAWb,KAAI,SAACc,GAAD,OAClB,cAAC,EAAD,CACAjC,MAAOiC,EAAUjC,MACjB6B,MAAOI,EAAUJ,MACjBL,SAAUU,GACLD,EAAUJ,cCcXO,EAxBM,SAAAzC,GACjB,IAD0B,EACpB0C,EAAkB,CACpB,CAACR,MAAM,MAAO7B,MAAM,GACpB,CAAC6B,MAAM,MAAO7B,MAAM,GACpB,CAAC6B,MAAM,MAAO7B,MAAM,GACpB,CAAC6B,MAAM,MAAO7B,MAAM,GACpB,CAAC6B,MAAM,MAAO7B,MAAM,GACpB,CAAC6B,MAAM,MAAO7B,MAAM,GACpB,CAAC6B,MAAM,MAAO7B,MAAM,GACpB,CAAC6B,MAAM,MAAO7B,MAAM,GACpB,CAAC6B,MAAM,MAAO7B,MAAM,GACpB,CAAC6B,MAAM,MAAO7B,MAAM,GACpB,CAAC6B,MAAM,MAAO7B,MAAM,GACpB,CAAC6B,MAAM,MAAO7B,MAAM,IAbE,cAgBLL,EAAM2C,UAhBD,IAgB1B,IAAI,EAAJ,qBAAoC,CAAC,IAA3BlB,EAA0B,QAEhCiB,EADqBjB,EAAQZ,KAAK+B,YACJvC,OAASoB,EAAQL,QAlBzB,8BAqB1B,OAAO,cAAC,EAAD,CAAOiB,WAAYK,KCSfG,MAxBf,SAAkB7C,GAChB,MAAwC8C,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAKMC,EAAmBjD,EAAMsB,MAAM4B,QAAO,SAAAzB,GAC1C,OAAOA,EAAQZ,KAAKI,cAAckC,aAAeJ,KAGnD,OACE,eAAC,EAAD,CAAM7C,UAAU,WAAhB,UACE,cAAC,EAAD,CAEEI,SAAUyC,EACVtC,eAZsB,SAAC2C,GAC3BJ,EAAgBI,MAaZ,cAACC,EAAD,CAAeV,SAAUM,IAC3B,cAAC,EAAD,CAAc3B,MAAO2B,Q,OC8BZK,G,MAtDK,SAACtD,GACjB,MAAuC8C,mBAAS,IAAhD,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAyCV,mBAAS,IAAlD,mBAAOW,EAAP,KAAqBC,EAArB,KACA,EAAqCZ,mBAAS,IAA9C,mBAAOa,EAAP,KAAmBC,EAAnB,KA2BA,OAAO,uBAAMC,SAfS,SAAArD,GAClBA,EAAMsD,iBACN,IAAMC,EAAa,CACf5C,MAAOoC,EACPnC,QAASqC,EACT5C,KAAM,IAAImD,KAAKL,IAGnB3D,EAAMiE,kBAAkBF,GAExBP,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAGZ,UACH,sBAAK1D,UAAU,wBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,0CACA,uBAAOgE,KAAK,OAAO7D,MAAOkD,EAAchD,SA7BzB,SAACC,GACxBgD,EAAgBhD,EAAME,OAAOL,aA8BzB,sBAAKH,UAAU,uBAAf,UACI,2CACA,uBAAOgE,KAAK,SAASC,IAAI,IAAIC,KAAK,IAAI/D,MAAOoD,EAAelD,SA9B5C,SAACC,GACzBkD,EAAiBlD,EAAME,OAAOL,aA+B1B,sBAAKH,UAAU,uBAAf,UACI,yCACA,uBAAOgE,KAAK,OAAOC,IAAI,aAAa3B,IAAI,aAAanC,MAAOsD,EAAapD,SA/B3D,SAACC,GACvBoD,EAAepD,EAAME,OAAOL,gBAiC5B,sBAAKH,UAAU,uBAAf,UACA,wBAAQgE,KAAK,SAASG,QAASrE,EAAMsE,SAArC,oBACA,wBAAQJ,KAAK,SAAb,iCCVOK,G,MAnCI,SAACvE,GAClB,MAAkC8C,oBAAS,GAA3C,mBAAO0B,EAAP,KAAkBC,EAAlB,KAmBA,OACE,sBAAKvE,UAAU,cAAf,WACIsE,GACA,wBAAQH,QAXc,WAC1BI,GAAa,IAUT,6BAEDD,GACC,cAAC,EAAD,CACEP,kBAxBuB,SAACS,GAC9B,IAAMX,EAAW,2BACZW,GADY,IAEfhD,GAAII,KAAK6C,SAASxB,aAEpBnD,EAAM4E,aAAab,GACnBU,GAAa,IAmBPH,SAZmB,WACzBG,GAAa,WClBXI,EAAiB,CACrB,CACEnD,GAAI,KACJP,MAAO,eACPC,OAAQ,MACRP,KAAM,IAAImD,KAAK,KAAM,EAAG,KAE1B,CAAEtC,GAAI,KAAMP,MAAO,SAAUC,OAAQ,OAAQP,KAAM,IAAImD,KAAK,KAAM,GAAI,KACtE,CACEtC,GAAI,KACJP,MAAO,gBACPC,OAAQ,OACRP,KAAM,IAAImD,KAAK,KAAM,EAAG,KAE1B,CACEtC,GAAI,KACJP,MAAO,oBACPC,OAAQ,IACRP,KAAM,IAAImD,KAAK,KAAM,EAAG,MAkBbc,MAdf,WACA,MAA+BhC,mBAAS+B,GAAxC,mBAAOlC,EAAP,KAAgBoC,EAAhB,KAKE,OACE,gCACA,cAAC,EAAD,CAAYH,aANU,SAAAnD,GACzBsD,GAAY,SAAAC,GAAgB,MAAM,CAAEvD,GAAR,mBAAmBkB,UAM5C,cAAC,EAAD,CAAUrB,MAAOqB,QC9BrBsC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.65bc067c.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props){\r\n    const classes='card ' + props.className \r\n    return <div className={classes}>{props.children}</div>\r\n\r\n}\r\n\r\nexport default Card;","\r\nimport React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onFilterChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css'\r\n\r\nfunction ExpemseDate(props){\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const date = props.date.toLocaleString('en-US', { day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return(\r\n        <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div  className=\"expense-date__year\">{year}</div>\r\n        <div  className=\"expense-date__day\">{date}</div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ExpemseDate","import './ExpenseItem.css'\r\nimport Card from '../UI/Card'\r\nimport ExpenseDate from './ExpenseDate'\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n    return (<li>\r\n        <Card className=\"expense-item\">\r\n            <ExpenseDate date={props.date} />\r\n            <div className=\"expense-item__description\">\r\n                <h2>{props.title}</h2>\r\n                <div className=\"expense-item__price\">Rs.{props.amount}</div>\r\n            </div>\r\n        </Card>\r\n    </li>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import './ExpensesList.css'\r\nimport ExpenseItem from './ExpenseItem'\r\n\r\nconst Expenseslist = (props) => {\r\n    if (props.items.length === 0) {\r\n        return <h2 className=\"expense-list__Fallback\">No Expense Found !!</h2>\r\n    }\r\n    return <ul className='expense-list'>\r\n        {props.items.map(expense =>\r\n            <ExpenseItem\r\n                key={expense.id}\r\n                title={expense.title}\r\n                amount={expense.amount}\r\n                date={expense.date} />)}\r\n    </ul>\r\n}\r\n    export default Expenseslist","import './ChartBar.css'\r\n\r\n\r\nconst ChartBar = props => {\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0){\r\n        barFillHeight = Math.round(( props.value / props.maxValue ) * 100) + '%';\r\n    }\r\n\r\n    return (<div className='chart-bar'>\r\n        <div className='chart-bar__inner'>\r\n            <div className='chart-bar__fill' style={{ height : barFillHeight }}></div>\r\n        </div>\r\n        <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;","import ChartBar from './ChartBar'\r\nimport './Chart.css'\r\n\r\n\r\nconst Chart = (props) =>{\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value)\r\n    const totalMaxValue = Math.max(...dataPointValues);\r\n   return <div className='chart'>\r\n       {props.dataPoints.map((dataPoint) => (\r\n           <ChartBar \r\n           value={dataPoint.value}\r\n           label={dataPoint.label}\r\n           maxValue={totalMaxValue}\r\n           key={dataPoint.label}\r\n           />\r\n       ))}\r\n\r\n   </div>\r\n}\r\n\r\n\r\nexport default Chart;","import React from 'react'\r\nimport Chart from '../Chart/Chart'\r\n\r\nconst ExpenseChart = props => {\r\n    const chartDataPoints = [\r\n        {label:'Jan' ,value:0} ,\r\n        {label:'Feb' ,value:0} ,\r\n        {label:'Mar' ,value:0} ,\r\n        {label:'Apr' ,value:0} ,\r\n        {label:'May' ,value:0} ,\r\n        {label:'Jun' ,value:0} ,\r\n        {label:'Jul' ,value:0} ,\r\n        {label:'Aug' ,value:0} ,\r\n        {label:'Sep' ,value:0} ,\r\n        {label:'Oct' ,value:0} ,\r\n        {label:'Nov' ,value:0} ,\r\n        {label:'Dec' ,value:0} ,\r\n    ];\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth(); //Starting from 0 i.e Jan => 0\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n}\r\n\r\nexport default ExpenseChart;","import './Expenses.css';\r\nimport Card from '../UI/Card'\r\nimport { useState } from 'react';\r\nimport ExpensesFilter from '../Expenses/ExpensesFilter'\r\nimport ExpensesList from './ExpensesList'\r\nimport ExpensesChart from './ExpensesChart'\r\n\r\n\r\n\r\nfunction Expenses(props) {\r\n  const [FilteredYear, setFilteredYear] = useState('2021');\r\n\r\n  const FilterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  }\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === FilteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n\r\n        selected={FilteredYear}\r\n        onFilterChange={FilterChangeHandler} />\r\n\r\n        <ExpensesChart expenses={filteredExpenses}/>\r\n      <ExpensesList items={filteredExpenses}/>\r\n\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle,setEnteredTitle] = useState('');\r\n    const [enteredAmount,setEnteredAmount] = useState('');\r\n    const [enteredDate,setEnteredDate] = useState('');\r\n\r\n    const titleChangeHandler = (event) =>{\r\n        setEnteredTitle(event.target.value);\r\n    };\r\n    const amountChangeHandler = (event) =>{\r\n        setEnteredAmount(event.target.value);\r\n    };\r\n    const dateChangeHandler = (event) =>{\r\n        setEnteredDate(event.target.value);\r\n    };\r\n\r\n    const submitHandler = event =>{\r\n        event.preventDefault();\r\n        const expenseData ={\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n\r\n    return <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input type=\"number\" min=\"1\" step=\"1\" value={enteredAmount} onChange={amountChangeHandler}/>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input type=\"date\" min=\"2019-01-01\" max=\"2023-12-31\" value={enteredDate} onChange={ dateChangeHandler} />\r\n            </div>\r\n        </div>\r\n        <div className='new-expense__actions'>\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n\r\n}\r\n\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;","import { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses'\nimport NewExpense from './components/NewExpense/NewExpense'\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 11, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\nconst [expenses,setExpenses] = useState(DUMMY_EXPENSES);\nconst addExpensehandler = expense =>{\n setExpenses(prevExpenses =>{return [expense,...expenses]}); \n};\n\n  return (\n    <div>\n    <NewExpense onAddExpense={addExpensehandler}/>\n    <Expenses items={expenses} />\n  </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}